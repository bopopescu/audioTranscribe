'use strict';

import { NativeModules, DeviceEventEmitter } from 'react-native';

// A Helper class to Start Stop Process recording
class SpeechTranslatorModule {


    //Initializes the Recorder and Streamer. Gets a promise back
    static initSpeechProcessor = (authConfigFile, saveToFile, showInterimResults, languageCode) => NativeModules.ReactNativeGoogleCloudSpeech.init(authConfigFile, saveToFile,showInterimResults, languageCode);

    // Starts Recording. Internall creates a thread to start capturing data from mic hardware and send data to Google Cloud SPeech
    static startVoiceCapture = () => NativeModules.ReactNativeGoogleCloudSpeech.startRecording();


    // Stops Recording and Rendering the data to Google Cloud Spech
    static stopVoiceCapture = () => NativeModules.ReactNativeGoogleCloudSpeech.stopRecording();


    static destroySpeechProcessor = () => NativeModules.ReactNativeGoogleCloudSpeech.destroy();

    static processTranslatedText = (existingText, response) => {
        console.log(response);
        return existingText + response;
    }

    static addNewTextListener = (callbackFunction) => {
        DeviceEventEmitter.addListener('onTranslatedSpeechEvent', callbackFunction);
    }

    static addErrorTextListener = (callbackFunction) => {
        DeviceEventEmitter.addListener('onTranslatedSpeechError', callbackFunction);
    }
    
    static addInputMicChangeListener = (callbackFunction) => {
        DeviceEventEmitter.addListener('MIC_SOURCE_CHANGE', callbackFunction);
    }
    
    static addInternelRestartListener = (callbackFunction) => {
        DeviceEventEmitter.addListener('onTranslatedSpeechRestart', callbackFunction);
    }
    
    


}
export default SpeechTranslatorModule;
 
